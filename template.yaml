AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-engine

  Sample SAM Template for sam-engine

Parameters:
  VpcCIDR:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for the VPC'

Globals:
  Function:
    Timeout: 3
    VpcConfig:
      SecurityGroupIds:
        - !Ref DBSubnetGroup
      SubnetIds:
        - !Ref MainSubnet

Resources:

  MainVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true

  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC

  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: '10.0.2.0/24'
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS and Lambda'
      VpcId: !Ref MainVPC


  MyDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS DB instance'
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  CreatePolicyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.create_policy.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Events:
        CreatePolicy:
          Type: Api 
          Properties:
            Path: /create-policy
            Method: post
            Auth:
              DefaultAuthorizer: Authorizer
              Authorizers:
                AuthorizerFunction:
                  FunctionPayloadType: REQUEST
                  FunctionArn: 
                    GetAtt: AuthorizerFunction.Arn
                  Identity:
                    Headers:
                      - Authorization

  CreateTenantFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.create_tenant.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Events:
        CreateTenant:
          Type: Api 
          Properties:
            Path: /create-tenant
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.login.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Events:
        CreateTenant:
          Type: Api 
          Properties:
            Path: /login
            Method: post

  EngineFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.engine.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Events:
        CreateEngine:
          Type: Api 
          Properties:
            Path: /create-engine
            Method: post
            Auth:
              DefaultAuthorizer: Authorizer
              Authorizers:
                AuthorizerAPIKeyFunction:
                  FunctionPayloadType: REQUEST
                  FunctionArn: 
                    GetAtt: AuthorizerAPIKeyFunction.Arn
                  Identity:
                    Headers:
                      - x-api-key

  AuthorizerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.authorizer.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64

  AuthorizerAPIKeyFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/
      Handler: handlers.authorizer_api_key.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64

